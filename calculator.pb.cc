// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculator.proto

#include "calculator.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace calculator {
class OperationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperationRequest> _instance;
} _OperationRequest_default_instance_;
class OperationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperationResponse> _instance;
} _OperationResponse_default_instance_;
class LoadIntervalRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadIntervalRequest> _instance;
} _LoadIntervalRequest_default_instance_;
class LoadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadResponse> _instance;
} _LoadResponse_default_instance_;
}  // namespace calculator
static void InitDefaultsscc_info_LoadIntervalRequest_calculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::calculator::_LoadIntervalRequest_default_instance_;
    new (ptr) ::calculator::LoadIntervalRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::calculator::LoadIntervalRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadIntervalRequest_calculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadIntervalRequest_calculator_2eproto}, {}};

static void InitDefaultsscc_info_LoadResponse_calculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::calculator::_LoadResponse_default_instance_;
    new (ptr) ::calculator::LoadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::calculator::LoadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadResponse_calculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadResponse_calculator_2eproto}, {}};

static void InitDefaultsscc_info_OperationRequest_calculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::calculator::_OperationRequest_default_instance_;
    new (ptr) ::calculator::OperationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::calculator::OperationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperationRequest_calculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OperationRequest_calculator_2eproto}, {}};

static void InitDefaultsscc_info_OperationResponse_calculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::calculator::_OperationResponse_default_instance_;
    new (ptr) ::calculator::OperationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::calculator::OperationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperationResponse_calculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OperationResponse_calculator_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_calculator_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_calculator_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_calculator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_calculator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::OperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::calculator::OperationRequest, a_),
  PROTOBUF_FIELD_OFFSET(::calculator::OperationRequest, b_),
  PROTOBUF_FIELD_OFFSET(::calculator::OperationRequest, operator__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::OperationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::calculator::OperationResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::LoadIntervalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::calculator::LoadIntervalRequest, intervalinseconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::LoadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::calculator::LoadResponse, invocationsperminutes_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::calculator::OperationRequest)},
  { 8, -1, sizeof(::calculator::OperationResponse)},
  { 14, -1, sizeof(::calculator::LoadIntervalRequest)},
  { 20, -1, sizeof(::calculator::LoadResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_OperationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_OperationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_LoadIntervalRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_LoadResponse_default_instance_),
};

const char descriptor_table_protodef_calculator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020calculator.proto\022\ncalculator\"\240\001\n\020Opera"
  "tionRequest\022\t\n\001a\030\001 \001(\001\022\t\n\001b\030\002 \001(\001\0228\n\010ope"
  "rator\030\003 \001(\0162&.calculator.OperationReques"
  "t.Operators\"<\n\tOperators\022\007\n\003ADD\020\000\022\014\n\010SUB"
  "TRACT\020\001\022\014\n\010MULTIPLY\020\002\022\n\n\006DIVIDE\020\003\"#\n\021Ope"
  "rationResponse\022\016\n\006result\030\001 \001(\001\"0\n\023LoadIn"
  "tervalRequest\022\031\n\021intervalInSeconds\030\001 \001(\005"
  "\"-\n\014LoadResponse\022\035\n\025invocationsPerMinute"
  "s\030\001 \001(\0012\255\001\n\nCalculator\022J\n\tCalculate\022\034.ca"
  "lculator.OperationRequest\032\035.calculator.O"
  "perationResponse\"\000\022S\n\022ReadCalculatorLoad"
  "\022\037.calculator.LoadIntervalRequest\032\030.calc"
  "ulator.LoadResponse\"\0000\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_calculator_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_calculator_2eproto_sccs[4] = {
  &scc_info_LoadIntervalRequest_calculator_2eproto.base,
  &scc_info_LoadResponse_calculator_2eproto.base,
  &scc_info_OperationRequest_calculator_2eproto.base,
  &scc_info_OperationResponse_calculator_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_calculator_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_calculator_2eproto = {
  false, false, descriptor_table_protodef_calculator_2eproto, "calculator.proto", 511,
  &descriptor_table_calculator_2eproto_once, descriptor_table_calculator_2eproto_sccs, descriptor_table_calculator_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_calculator_2eproto::offsets,
  file_level_metadata_calculator_2eproto, 4, file_level_enum_descriptors_calculator_2eproto, file_level_service_descriptors_calculator_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_calculator_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_calculator_2eproto)), true);
namespace calculator {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OperationRequest_Operators_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_calculator_2eproto);
  return file_level_enum_descriptors_calculator_2eproto[0];
}
bool OperationRequest_Operators_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr OperationRequest_Operators OperationRequest::ADD;
constexpr OperationRequest_Operators OperationRequest::SUBTRACT;
constexpr OperationRequest_Operators OperationRequest::MULTIPLY;
constexpr OperationRequest_Operators OperationRequest::DIVIDE;
constexpr OperationRequest_Operators OperationRequest::Operators_MIN;
constexpr OperationRequest_Operators OperationRequest::Operators_MAX;
constexpr int OperationRequest::Operators_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void OperationRequest::InitAsDefaultInstance() {
}
class OperationRequest::_Internal {
 public:
};

OperationRequest::OperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:calculator.OperationRequest)
}
OperationRequest::OperationRequest(const OperationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&operator__) -
    reinterpret_cast<char*>(&a_)) + sizeof(operator__));
  // @@protoc_insertion_point(copy_constructor:calculator.OperationRequest)
}

void OperationRequest::SharedCtor() {
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operator__) -
      reinterpret_cast<char*>(&a_)) + sizeof(operator__));
}

OperationRequest::~OperationRequest() {
  // @@protoc_insertion_point(destructor:calculator.OperationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OperationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OperationRequest::ArenaDtor(void* object) {
  OperationRequest* _this = reinterpret_cast< OperationRequest* >(object);
  (void)_this;
}
void OperationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperationRequest& OperationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperationRequest_calculator_2eproto.base);
  return *internal_default_instance();
}


void OperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.OperationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operator__) -
      reinterpret_cast<char*>(&a_)) + sizeof(operator__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double a = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          a_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double b = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          b_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .calculator.OperationRequest.Operators operator = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operator_(static_cast<::calculator::OperationRequest_Operators>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.OperationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double a = 1;
  if (!(this->a() <= 0 && this->a() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_a(), target);
  }

  // double b = 2;
  if (!(this->b() <= 0 && this->b() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_b(), target);
  }

  // .calculator.OperationRequest.Operators operator = 3;
  if (this->operator_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_operator_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.OperationRequest)
  return target;
}

size_t OperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.OperationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double a = 1;
  if (!(this->a() <= 0 && this->a() >= 0)) {
    total_size += 1 + 8;
  }

  // double b = 2;
  if (!(this->b() <= 0 && this->b() >= 0)) {
    total_size += 1 + 8;
  }

  // .calculator.OperationRequest.Operators operator = 3;
  if (this->operator_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_operator_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:calculator.OperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:calculator.OperationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:calculator.OperationRequest)
    MergeFrom(*source);
  }
}

void OperationRequest::MergeFrom(const OperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.OperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.a() <= 0 && from.a() >= 0)) {
    _internal_set_a(from._internal_a());
  }
  if (!(from.b() <= 0 && from.b() >= 0)) {
    _internal_set_b(from._internal_b());
  }
  if (from.operator_() != 0) {
    _internal_set_operator_(from._internal_operator_());
  }
}

void OperationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:calculator.OperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationRequest::CopyFrom(const OperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.OperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationRequest::IsInitialized() const {
  return true;
}

void OperationRequest::InternalSwap(OperationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationRequest, operator__)
      + sizeof(OperationRequest::operator__)
      - PROTOBUF_FIELD_OFFSET(OperationRequest, a_)>(
          reinterpret_cast<char*>(&a_),
          reinterpret_cast<char*>(&other->a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OperationResponse::InitAsDefaultInstance() {
}
class OperationResponse::_Internal {
 public:
};

OperationResponse::OperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:calculator.OperationResponse)
}
OperationResponse::OperationResponse(const OperationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:calculator.OperationResponse)
}

void OperationResponse::SharedCtor() {
  result_ = 0;
}

OperationResponse::~OperationResponse() {
  // @@protoc_insertion_point(destructor:calculator.OperationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OperationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OperationResponse::ArenaDtor(void* object) {
  OperationResponse* _this = reinterpret_cast< OperationResponse* >(object);
  (void)_this;
}
void OperationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OperationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperationResponse& OperationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperationResponse_calculator_2eproto.base);
  return *internal_default_instance();
}


void OperationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.OperationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.OperationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double result = 1;
  if (!(this->result() <= 0 && this->result() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.OperationResponse)
  return target;
}

size_t OperationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.OperationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double result = 1;
  if (!(this->result() <= 0 && this->result() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:calculator.OperationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:calculator.OperationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:calculator.OperationResponse)
    MergeFrom(*source);
  }
}

void OperationResponse::MergeFrom(const OperationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.OperationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.result() <= 0 && from.result() >= 0)) {
    _internal_set_result(from._internal_result());
  }
}

void OperationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:calculator.OperationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationResponse::CopyFrom(const OperationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.OperationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationResponse::IsInitialized() const {
  return true;
}

void OperationResponse::InternalSwap(OperationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadIntervalRequest::InitAsDefaultInstance() {
}
class LoadIntervalRequest::_Internal {
 public:
};

LoadIntervalRequest::LoadIntervalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:calculator.LoadIntervalRequest)
}
LoadIntervalRequest::LoadIntervalRequest(const LoadIntervalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  intervalinseconds_ = from.intervalinseconds_;
  // @@protoc_insertion_point(copy_constructor:calculator.LoadIntervalRequest)
}

void LoadIntervalRequest::SharedCtor() {
  intervalinseconds_ = 0;
}

LoadIntervalRequest::~LoadIntervalRequest() {
  // @@protoc_insertion_point(destructor:calculator.LoadIntervalRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadIntervalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LoadIntervalRequest::ArenaDtor(void* object) {
  LoadIntervalRequest* _this = reinterpret_cast< LoadIntervalRequest* >(object);
  (void)_this;
}
void LoadIntervalRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadIntervalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadIntervalRequest& LoadIntervalRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadIntervalRequest_calculator_2eproto.base);
  return *internal_default_instance();
}


void LoadIntervalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.LoadIntervalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intervalinseconds_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadIntervalRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 intervalInSeconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          intervalinseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadIntervalRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.LoadIntervalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 intervalInSeconds = 1;
  if (this->intervalinseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_intervalinseconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.LoadIntervalRequest)
  return target;
}

size_t LoadIntervalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.LoadIntervalRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 intervalInSeconds = 1;
  if (this->intervalinseconds() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_intervalinseconds());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadIntervalRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:calculator.LoadIntervalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadIntervalRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadIntervalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:calculator.LoadIntervalRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:calculator.LoadIntervalRequest)
    MergeFrom(*source);
  }
}

void LoadIntervalRequest::MergeFrom(const LoadIntervalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.LoadIntervalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.intervalinseconds() != 0) {
    _internal_set_intervalinseconds(from._internal_intervalinseconds());
  }
}

void LoadIntervalRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:calculator.LoadIntervalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadIntervalRequest::CopyFrom(const LoadIntervalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.LoadIntervalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadIntervalRequest::IsInitialized() const {
  return true;
}

void LoadIntervalRequest::InternalSwap(LoadIntervalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(intervalinseconds_, other->intervalinseconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadIntervalRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadResponse::InitAsDefaultInstance() {
}
class LoadResponse::_Internal {
 public:
};

LoadResponse::LoadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:calculator.LoadResponse)
}
LoadResponse::LoadResponse(const LoadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invocationsperminutes_ = from.invocationsperminutes_;
  // @@protoc_insertion_point(copy_constructor:calculator.LoadResponse)
}

void LoadResponse::SharedCtor() {
  invocationsperminutes_ = 0;
}

LoadResponse::~LoadResponse() {
  // @@protoc_insertion_point(destructor:calculator.LoadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LoadResponse::ArenaDtor(void* object) {
  LoadResponse* _this = reinterpret_cast< LoadResponse* >(object);
  (void)_this;
}
void LoadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadResponse& LoadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadResponse_calculator_2eproto.base);
  return *internal_default_instance();
}


void LoadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.LoadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invocationsperminutes_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double invocationsPerMinutes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          invocationsperminutes_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.LoadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double invocationsPerMinutes = 1;
  if (!(this->invocationsperminutes() <= 0 && this->invocationsperminutes() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_invocationsperminutes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.LoadResponse)
  return target;
}

size_t LoadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.LoadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double invocationsPerMinutes = 1;
  if (!(this->invocationsperminutes() <= 0 && this->invocationsperminutes() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:calculator.LoadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:calculator.LoadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:calculator.LoadResponse)
    MergeFrom(*source);
  }
}

void LoadResponse::MergeFrom(const LoadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.LoadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.invocationsperminutes() <= 0 && from.invocationsperminutes() >= 0)) {
    _internal_set_invocationsperminutes(from._internal_invocationsperminutes());
  }
}

void LoadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:calculator.LoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadResponse::CopyFrom(const LoadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.LoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadResponse::IsInitialized() const {
  return true;
}

void LoadResponse::InternalSwap(LoadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(invocationsperminutes_, other->invocationsperminutes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace calculator
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::calculator::OperationRequest* Arena::CreateMaybeMessage< ::calculator::OperationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::OperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::OperationResponse* Arena::CreateMaybeMessage< ::calculator::OperationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::OperationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::LoadIntervalRequest* Arena::CreateMaybeMessage< ::calculator::LoadIntervalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::LoadIntervalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::LoadResponse* Arena::CreateMaybeMessage< ::calculator::LoadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::LoadResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
